{"version":3,"sources":["config/config.js","components/FrozenYoghurtBuilder.jsx","App.js","serviceWorker.js","index.js"],"names":["config","sizes","id","label","toppings","mainCategoryId","toppingMainCategories","FrozenYoghurtBuilder","_ref","onSubmit","_useState","useState","_useState2","Object","slicedToArray","selectedSizeId","setSelectedSizeId","_useState3","_useState4","selectedToppingIds","setSelectedToppingIds","react_default","a","createElement","className","map","size","key","href","classnames","is-active","onClick","toppingMainCategory","filter","topping","toppingId","indexOfToppingId","indexOf","newSelectedToppingIds","toConsumableArray","splice","concat","toggleSelectedTopping","length","App","submittedYoghurts","setSubmittedYoghurts","FrozenYoghurtBuilder_FrozenYoghurtBuilder","data","yoghurt","JSON","stringify","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4a092f8.chunk.js","sourcesContent":["export const config = {\n    sizes: [\n        {\n            id: 'small',\n            label: 'Pequeño'\n        },\n        {\n            id: 'medium',\n            label: 'Mediano'\n        },\n        {\n            id: 'large',\n            label: 'Grande'\n        }\n    ],\n    toppings: [\n        {\n            id: 'watermelon',\n            label: 'Sandía',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'banana',\n            label: 'Plátano',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'pineapple',\n            label: 'Piña',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'melon',\n            label: 'Melón',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'mango',\n            label: 'Mango',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'kiwi',\n            label: 'Kiwi',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'granada',\n            label: 'Granada',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'strawberry',\n            label: 'Fresa',\n            mainCategoryId: 'fruit'\n        },\n        {\n            id: 'almond',\n            label: 'Crocanti almendra',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'arandano',\n            label: 'Arándano deshidratado',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'chipsahoy',\n            label: 'Chips ahoy',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'conguitos-negros',\n            label: 'Conguitos negros',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'muesli',\n            label: 'Muesli',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'lotus',\n            label: 'Galleta Lotus',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'kitkat',\n            label: 'KitKat',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'lacasitos',\n            label: 'Lacasitos',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'nueces',\n            label: 'Nueces',\n            mainCategoryId: 'crunch'\n        },\n        {\n            id: 'chococrock',\n            label: 'Chococrock White',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'choco-negro-salsa',\n            label: 'Salsa chocolate negro',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'dulce-leche',\n            label: 'Dulce de leche',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'choco-blanco-salsa',\n            label: 'Chocolate blanco',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'frutos-bosque',\n            label: 'Frutos del bosque',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'fresas',\n            label: 'Fresas',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'manzana-verde',\n            label: 'Manzana verde',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'maracuya',\n            label: 'Maracuya',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'miel',\n            label: 'Miel',\n            mainCategoryId: 'sauce'\n        },\n        {\n            id: 'nocilla',\n            label: 'Nocilla',\n            mainCategoryId: 'sauce'\n        },\n    ],\n    toppingMainCategories: [\n        {\n            id: 'fruit',\n            label: 'Fruta'\n        },\n        {\n            id: 'crunch',\n            label: 'Crunch'\n        },\n        {\n            id: 'sauce',\n            label: 'Salsa'\n        }\n    ]\n}","import React, { useState } from 'react';\nimport { config } from '../config/config';\nimport classnames from 'classnames';\nimport './FrozenYoghurtBuilder.scss';\n\nexport const FrozenYoghurtBuilder = ({ onSubmit }) => {\n    const [selectedSizeId, setSelectedSizeId] = useState('');\n    const [selectedToppingIds, setSelectedToppingIds] = useState([]);\n\n    const toggleSelectedTopping = (toppingId) => {\n        const indexOfToppingId = selectedToppingIds.indexOf(toppingId);\n        if (indexOfToppingId !== -1) {\n            const newSelectedToppingIds = [...selectedToppingIds];\n            newSelectedToppingIds.splice(indexOfToppingId, 1);\n            setSelectedToppingIds(newSelectedToppingIds)\n        } else {\n            setSelectedToppingIds([...selectedToppingIds, toppingId]);\n        }\n    }\n\n    const onClickOnSend = () => {\n        if (!selectedSizeId || !selectedToppingIds.length) {\n            return;\n        }\n        onSubmit && onSubmit({ selectedSizeId, selectedToppingIds });\n        setSelectedSizeId('');\n        setSelectedToppingIds([]);\n    }\n\n    const isToppingIdSelected = (toppingId) => selectedToppingIds.indexOf(toppingId) !== -1;\n\n    return (\n        <div className=\"frozen-yoghurt-builder\">\n            <div className=\"columns\">\n                <div className=\"column\">\n                    <h4 className=\"title is-4\">Elige el tamaño</h4>\n                    <ul className=\"menu-list size-menu\">\n                        {config.sizes.map(size => (\n                            <li key={size.id}>\n                                <a href=\"#\" className={classnames({ 'is-active': selectedSizeId === size.id })} onClick={() => setSelectedSizeId(size.id)}>{size.label}</a>\n                            </li>\n                        ))}\n                    </ul>\n                    <h4 className=\"title is-4\">Añade los toppings</h4>\n                    <div className=\"topping-categories\">\n                        {config.toppingMainCategories.map(toppingMainCategory => (\n                            <div key={toppingMainCategory.id} className=\"topping-category\">\n                                <strong>{toppingMainCategory.label}</strong>\n                                <div className=\"topping-grid\">\n                                    {config.toppings.filter(topping => topping.mainCategoryId === toppingMainCategory.id).map(topping => (\n                                        <div onClick={() => toggleSelectedTopping(topping.id)} key={topping.id} className={classnames('topping', { 'is-active': isToppingIdSelected(topping.id) })}>{topping.label}</div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <div className=\"columns\">\n                <div className=\"column is-flex actions\">\n                    <button onClick={() => onClickOnSend()} className=\"button\">Enviar</button>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport { FrozenYoghurtBuilder } from './components/FrozenYoghurtBuilder';\nimport './App.css';\n\nfunction App() {\n\n  const [submittedYoghurts, setSubmittedYoghurts] = useState([])\n\n  const onSubmitYoghurt = (yoghurt) => {\n    setSubmittedYoghurts([...submittedYoghurts, yoghurt]);\n  }\n\n  return (\n    <div className=\"app\">\n      <section className=\"jumbo\">\n        <h1 className=\"title is-1\">Frozen Yoghurt Builder</h1>\n      </section>\n      <section className=\"builder\">\n        <FrozenYoghurtBuilder onSubmit={(data) => onSubmitYoghurt(data)}></FrozenYoghurtBuilder>\n      </section>\n      <section className=\"yoghurts-json\">\n        {JSON.stringify(submittedYoghurts)}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}